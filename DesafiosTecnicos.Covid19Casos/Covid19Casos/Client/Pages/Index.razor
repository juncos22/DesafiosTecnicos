@page "/"


@inject HttpClient Http

<h1>Covid19 Casos</h1>

Aplicación Web para consultar casos relacionados al SarsCovid19

<div class="row m-3">
    <div class="col-md-4">
        <h4>Formulario de Filtrado</h4>
        <EditForm Model="@Busqueda" OnValidSubmit="@ConsultarInformacion">
            <div class="form-group">
                <label>Fecha de Inicio</label>
                <InputDate class="form-control" @bind-Value="@Busqueda.FechaInicio" />
            </div>
            <div class="form-group">
                <label>Fecha de Fin</label>
                <InputDate class="form-control" @bind-Value="@Busqueda.FechaFin" />
            </div>
            <div class="form-group">
                <label>Edad de Inicio</label>
                <InputNumber class="form-control" @bind-Value="@Busqueda.EdadInicio" />
            </div>
            <div class="form-group">
                <label>Edad de Fin</label>
                <InputNumber class="form-control" @bind-Value="@Busqueda.EdadFin" />
            </div>
            <div class="form-group">
                <label>Género</label>
                <InputSelect class="form-control" @bind-Value="@Busqueda.Genero">
                    <option value="M">Masculino</option>
                    <option value="F">Femenino</option>
                </InputSelect>
            </div>
            <div class="form-group">
                <label>Provincia</label>
                <InputSelect class="form-control" @bind-Value="@Busqueda.Provincia">
                    @foreach (var provincia in provincias)
                    {
                        <option value="@provincia">@provincia</option>
                    }
                </InputSelect>
            </div>
            <button type="submit" class="btn btn-primary btn-block">Buscar Casos</button>
        </EditForm>
    </div>
    <div class="col-md-8">
        <button class="btn btn-secondary" @onclick="@LimpiarFiltros">Limpiar Filtros</button>

        @if (Response == null)
        {
            <p class="text-md-center">Cargando información...</p>
        }
        else if (Response.Data == null)
        {
            if (Response.Mensaje != null)
            {
                <p class="text-danger text-md-center">@Response.Mensaje</p>
            }
            else
            {
                <p class="text-info text-md-center">No hay información disponible.</p>
            }
        }
        else
        {
            <table class="table table-hover">
                <thead class="bg-info">
                    <tr>
                        <th>Fecha</th>
                        <th>Edad</th>
                        <th>Genero</th>
                        <th>Provincia</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Response.Data)
                    {
                        <tr>
                            <td>@item.Fecha.Date.ToString()</td>
                            <td>@item.Edad años</td>
                            @if (item.Genero == "M")
                            {
                                <td>Masculino</td>
                            }
                            else
                            {
                                <td>Femenino</td>
                            }
                            <td>@item.Provincia</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>

@code {
    // Objeto Response que recibirá el resultado de la búsqueda.
    public CasoResponse Response { get; set; }
    // Objeto Busqueda que recibirá todos los parámetros para filtrar la información.
    public BusquedaViewModel Busqueda = new BusquedaViewModel();

    // Lista de provincias registradas para mostrar en el InputSelect.
    public List<string> provincias = new List<string>();

    // Metodo para resetear los valores de cada campo y llamar de nuevo a la función 
    // para traer toda la información.
    async Task LimpiarFiltros()
    {
        Busqueda.FechaInicio = DateTime.MinValue;
        Busqueda.FechaFin = DateTime.MinValue;
        Busqueda.EdadInicio = 0;
        Busqueda.EdadFin = 0;
        Busqueda.Genero = "";
        Busqueda.Provincia = "";

        // El objeto Response se deja en nulo a efectos de que muestre el mensaje de carga de información.
        Response = null;

        await CargarInformacion();
    }

    // Obtiene todas las provincias registradas para filtrar.
    void CargarProvincias()
    {
        // Evalua que el objeto Response y su información no sean nulos.
        if (Response != null && Response.Data != null)
        {
            foreach (var item  in Response.Data)
            {
                // Evalua si la lista de provincias contiene la provincia del item actual,
                // de ser así, las agregará a la misma.
                if (!provincias.Contains(item.Provincia))
                {
                    provincias.Add(item.Provincia);
                }
            }
        }
    }

    // Método asíncrono para cargar la información completa.
    async Task CargarInformacion()
    {
        // El objeto Response recibe de forma asíncrona el resultado de la petición
        // realizada al endpoint /covid del controlador CovidController.
        // La respuesta traerá un objeto del tipo CasoResponse.
        Response = await Http.GetFromJsonAsync<CasoResponse>("covid");
    }

    // Se llama al metodo asíncrono OnInitializedAsync para
    // establecer valores por defecto a algunos atributos y llamar a la función
    // para cargar la información completa y sin filtros.
    protected override async Task OnInitializedAsync()
    {

        await CargarInformacion();

        CargarProvincias();
    }

    // Se consulta la información por medio de los campos a filtrar, realizando una petición GET
    // al endpoint /covid/total y pasandole todos los atributos del objeto Busqueda de tipo BusquedaViewModel.
    // El objeto Response se deja en nulo a efectos de que muestre el mensaje de carga de información.
    async Task ConsultarInformacion()
    {
        Response = null;
        Response = await Http.GetFromJsonAsync<CasoResponse>($"covid/total?FechaInicio={Busqueda.FechaInicio}&FechaFin={Busqueda.FechaFin}&EdadInicio={Busqueda.EdadInicio}&EdadFin={Busqueda.EdadFin}&Genero={Busqueda.Genero}&Provincia={Busqueda.Provincia}");
    }

}
